from scapy.all import *
​
# przechwytywanie pakietów icmp
​
# test = scapy.all.sniff(iface="eth0", filter="icmp", count=8)
# # scapy.all.wrpcap("dane.pcap", test)
# nowy = scapy.all.rdpcap("dane.pcap")
# print(nowy)
# nowy[0].show()
# print(nowy[0][0].dst)
​
# pakiet = Ether(src="ff:ff:ff:ff:ff:ff")/IP(src="192.168.0.220",dst="192.168.0.115")/ICMP()/"Hello!"
# sendp(pakiet) # sendp bo na 2 warstwie
​
# from scapy.all import *
#
# pakiet = IP(ttl=64)
# pakiet = IP(src="192.168.0.114")
# pakiet = IP(dst="192.168.0.115")
# send(pakiet) 
​
#odbieranie pakietów
​
# pakiet = IP(dst="google.com")/ICMP()/"Nauka Python"
# ans,notans =sr(pakiet)
#
# print(ans)
# print(notans)
#
# ans.show()
​
# wysyłanie pakietów
# sendp(Ether()/IP(dst="google.com")/ICMP()/"Nauka Python", iface="eth0") # jeden pakiet
# sendp(Ether()/IP(dst="google.com")/ICMP()/"Nauka Python", iface="eth0",loop=1) # pakiety w petli
​
# skaner portów
​
# from scapy.layers.inet import *
#
# target = "192.168.0.115"
#
# for port in range(100):
#     x = (IP(dst=target)/TCP(dport=[port],flags="S"))
#     ans,notans = sr(x,timeout=1, verbose=0)
#
#     if ans:
#         dane = "{}".format(str(ans[0]).split(" ")[7][6:])
#         print("port {}, protokol TCP, usluga = {}".format(port,dane))
#     else:
#         continue
